{"version":3,"sources":["App.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","id","name","number","handleChange","e","setState","target","value","handleSubmit","evt","preventDefault","props","onSubmit","resetContactForm","numberInputId","uuidv4","nameInputId","this","className","s","form","formItem","autoComplete","type","pattern","title","required","onChange","btn","Component","Filter","ContactList","contactsArr","onDeleteContact","contactList","map","user","contactitem","onClick","prototype","PropTypes","string","isRequired","console","log","App","contacts","filtered","formSubmithandler","formData","some","contact","alert","addContact","prevState","deleteContact","contactId","filter","filtеredValue","currentTarget","localStorage","setItem","JSON","stringify","parcedContactsList","parse","getItem","filteredContactToLowerCase","toLocaleLowerCase","filteredContactList","includes","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f23e640c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__yPRjY\",\"title\":\"App_title__3orQ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1ZIHG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__r1ULk\",\"formItem\":\"ContactForm_formItem__2Y_PN\",\"btn\":\"ContactForm_btn__3ogGA\",\"number\":\"ContactForm_number__1Tj8E\"};","import React, { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n\r\n    state = {\r\n        id: '',\r\n        name: '',\r\n        number: '',\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    handleSubmit = evt => {\r\n        evt.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.resetContactForm();\r\n    };\r\n\r\n    resetContactForm = () => {\r\n        this.setState(\r\n            {\r\n                name: '',\r\n                number: '',\r\n                id: '',\r\n            }\r\n        )\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        const numberInputId = uuidv4();\r\n        const nameInputId = uuidv4();\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className={s.form}>\r\n                <span>Name</span>\r\n                <label className={s.formItem}>\r\n                    <input\r\n                        autoComplete=\"off\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        onChange={this.handleChange}\r\n                        value={this.state.name}\r\n                        id={nameInputId}\r\n                    />\r\n                </label>\r\n                <span className={s.number}>Number</span>\r\n                <label className={s.formItem}>\r\n                    <input\r\n                        autoComplete=\"off\"\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        onChange={this.handleChange}\r\n                        value={this.state.number}\r\n                        id={numberInputId}\r\n                    />\r\n                </label>\r\n                <button type=\"submit\" className={s.btn}>Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\nexport default ContactForm;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css'\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n\r\n    return (\r\n        <div>\r\n            <p className={s.title}>Find contacts by name</p>\r\n            <label>\r\n                <input type=\"text\" value={value} onChange={onChange}></input>\r\n            </label>\r\n        </div>\r\n    )\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}\r\nexport default Filter;","import React from 'react';\r\nimport s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n// import s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contactsArr, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contactsArr.map((user) => (\r\n        <li key={user.id} className={s.contactitem} >\r\n          <span>{user.name} {user.number}</span>\r\n          <button type='button' className={s.btn}\r\n            onClick={() => onDeleteContact(user.id)}\r\n          >Delete</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nContactList.prototype = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport s from './App.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// const contactsArr = [\r\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n// ]\r\n\r\nconsole.log(null === true);\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    contacts: [],\r\n    filtered: ''\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n\r\n    if (this.state.contacts !== prevState.contacts)\r\n    {\r\n      localStorage.setItem('contactsList', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const parcedContactsList = JSON.parse(localStorage.getItem('contactsList'));\r\n\r\n    if (parcedContactsList)\r\n    {\r\n      this.setState({ contacts: parcedContactsList })\r\n    }\r\n\r\n  }\r\n\r\n\r\n  formSubmithandler = (formData) => {\r\n\r\n    if (this.state.contacts.some(contact => contact.name === formData.name))\r\n    {\r\n      alert(`${ formData.name } is already in contacts`)\r\n    } else\r\n    {\r\n      const addContact = { ...formData, id: uuidv4() };\r\n\r\n      this.setState(prevState => ({\r\n\r\n        contacts: [addContact, ...prevState.contacts]\r\n\r\n      }\r\n      ))\r\n    };\r\n\r\n  }\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\r\n    }))\r\n  };\r\n\r\n  filtеredValue = evt => {\r\n    this.setState({\r\n      filtered: evt.currentTarget.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const filteredContactToLowerCase = this.state.filtered.toLocaleLowerCase();\r\n\r\n    const filteredContactList = this.state.contacts.filter(contact =>\r\n      contact.name.toLocaleLowerCase().includes(filteredContactToLowerCase),\r\n    )\r\n\r\n    return (\r\n      <div className={s.container}>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n        <ContactForm onSubmit={this.formSubmithandler} />\r\n        <h2 className={s.title}>Contacts</h2>\r\n        <Filter value={this.state.filtered} onChange={this.filtеredValue} />\r\n        <ContactList\r\n          contactsArr={filteredContactList}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1ucMd\",\"btn\":\"ContactList_btn__1IEob\",\"contactitem\":\"ContactList_contactitem__OUKYR\"};"],"sourceRoot":""}